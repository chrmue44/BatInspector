<Application x:Class="BatInspector.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BatInspector"
             >
    <Application.Resources>
    <SolidColorBrush x:Key="colorBackGround" Color="#FFF7F9FE" />
    <SolidColorBrush x:Key="colorBackGroundCheckB" Color="White"/>
    <SolidColorBrush x:Key="colorBackGroundTextB" Color="White"/>
    <SolidColorBrush x:Key="colorBackGroundWindow" Color="#FF5D6B99"/>
    <SolidColorBrush x:Key="colorForeGroundWindow" Color="White" />
    <SolidColorBrush x:Key="colorBackGroundToolB" Color="#FFCCD5F0" />
    <SolidColorBrush x:Key="colorBackGroundButton" Color="#FF95A4D3" />
    <SolidColorBrush x:Key="colorForeGroundButton" Color="White" />
    <SolidColorBrush x:Key="colorForeGroundLabel" Color="Black" />
    <SolidColorBrush x:Key="colorBackGroundGrpFrame" Color="White" />
    <SolidColorBrush x:Key="colorBackGroundCombo" Color="#FFF7F9FE" />
    <SolidColorBrush x:Key="colorForeGroundSlider" Color="#FFC7C9CE" />
    <SolidColorBrush x:Key="colorBackgroundAttn" Color="#FFFFD010" />


        <!--
        <Style  TargetType="GroupBox">
      <Setter Property="Background" Value="#FFF7F9FE"/>
      <Setter Property="Foreground" Value="Black"/>
      <Setter Property="HeaderTemplate">
         <Setter.Value>
             <DataTemplate>
                 <TextBlock Text="{Binding}" Foreground="{DynamicResource colorForeGroundLabel}" FontWeight="Bold"/>
              </DataTemplate>
         </Setter.Value>
      </Setter>
      </Style>  -->

        <Style  TargetType="GroupBox">
            <Setter Property="Background" Value="{DynamicResource colorBackGround}"/>
      <Setter Property="Foreground" Value="{DynamicResource colorForeGroundLabel}"/>
        </Style>

        <Style TargetType="Grid">
            <Setter Property="Background" Value="{DynamicResource colorBackGround}"/>
        </Style>
        <Style TargetType="CheckBox">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundCheckB}"/>
    </Style>
    <Style TargetType="TreeView">
      <Setter Property="Background" Value="{DynamicResource colorBackGround}"/>
    </Style>
    <Style TargetType="TextBox">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundTextB}"/>
    </Style>
    <Style TargetType="Window">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundWindow}" />
    </Style>
    <Style TargetType="GridSplitter">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundWindow}"/>
    </Style>
    <Style TargetType="ToolBar">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundToolB}"/>
    </Style>
    <Style TargetType="ToolBarTray">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundToolB}"/>
    </Style>
    <Style TargetType="ComboBoxItem">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundCombo}"/>
      <Setter Property="Foreground" Value="{DynamicResource colorForeGroundLabel}"/>
    </Style>
    <Style TargetType="ScrollBar">
      <Setter Property="Background" Value="{DynamicResource colorBackGround}"/>
      <Setter Property="Foreground" Value="{DynamicResource colorForeGroundSlider}"/>
    </Style>
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <ControlTemplate x:Key="GroupBoxCmu" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="6"/>
            </Grid.RowDefinitions>
            <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Grid.Column="0" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1"/>
        <Border BorderBrush="{DynamicResource colorBackGroundGrpFrame}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1">
                <Border.OpacityMask>
                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                        <Binding ElementName="Header" Path="ActualWidth" />
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=Self}"/>
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=Self}"/>
                    </MultiBinding>
                </Border.OpacityMask>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
            <Border BorderBrush="{DynamicResource colorBackGroundGrpFrame}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                </Border>
            </Border>
        <Border x:Name="Header" Grid.Column="1" Padding="5,0,5,0" Grid.RowSpan="2" Grid.Row="0" Background="{DynamicResource colorBackGround}">
                    <ContentPresenter ContentSource="Header" Opacity ="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ContentPresenter Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Grid>
    </ControlTemplate>
    <Style TargetType="Label">
      <Setter Property="Background" Value="{DynamicResource colorBackGround}"/>
      <Setter Property="Foreground" Value="{DynamicResource colorForeGroundLabel}"/>
    </Style>

    <Style TargetType="Button">
      <Setter Property="Background" Value="{DynamicResource colorBackGroundButton}"/>
      <Setter Property="Foreground" Value="{DynamicResource colorForeGroundButton}" />
      <Setter Property="Padding"    Value="6,0,6,0" />
      <Style.Resources>
        <Style TargetType="Border">
          <Setter Property="CornerRadius" Value="3" />
        </Style>
      </Style.Resources>
    </Style>

        <Style TargetType="Button" x:Key="SharpCornerButton">
            <Setter Property="Background" Value="{DynamicResource colorBackGroundWindow}"/>
            <Setter Property="Foreground" Value="{DynamicResource colorForeGroundButton}" />
            <Setter Property="Padding"    Value="6,0,6,0" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="ImageEnabled" TargetType="Image">
      <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Opacity" Value="0.25"></Setter>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="StatusBar">
      <Setter Property="Background" Value="#FFF7F9FE"/>
    </Style>
    <Style TargetType="{x:Type TabItem}">
      <Setter Property="Width" Value="170"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabItem}">
            <Border>
              <Grid>
                <Grid>
                  <Border x:Name="border" 
                                            CornerRadius="5,5,0,0"
                                            Background="{DynamicResource colorBackGroundWindow}" Margin="1,0,1,0"/>
                </Grid>
                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected"
                                     Value="False">
                <Setter TargetName="border"
                                        Property="Background" Value="{DynamicResource colorBackGroundToolB}" />
                <Setter Property="Foreground" Value="{DynamicResource colorForeGroundLabel}" />

                <Setter Property="Height" Value="20"/>
              </Trigger>
              <Trigger Property="IsSelected"
                                     Value="True">
                <Setter TargetName="border"
                                        Property="Background"
                                        Value="{DynamicResource colorBackGroundWindow}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Height" Value="24"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="TabControlCm" TargetType="{x:Type TabControl}">
      <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" Background="{DynamicResource colorBackGround}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition x:Name="ColumnDefinition0"/>
          <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
          <RowDefinition x:Name="RowDefinition1" Height="*"/>
        </Grid.RowDefinitions>
        <TabPanel x:Name="HeaderPanel" Background="Transparent"  Grid.Column="0" IsItemsHost="True" Margin="0,0,0,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Height="20"/>
        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource colorBackGround}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
          <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="TabStripPlacement" Value="Bottom">
          <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
          <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
          <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
          <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
          <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
        </Trigger>
        <Trigger Property="TabStripPlacement" Value="Left">
          <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
          <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
          <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
          <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
          <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
          <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
          <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
          <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
          <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
        </Trigger>
        <Trigger Property="TabStripPlacement" Value="Right">
          <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
          <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
          <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
          <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
          <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
          <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
          <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
          <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
          <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        </Trigger>
        <Trigger Property="IsEnabled" Value="True">
          <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource colorForeGroundLabel}"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>


    </Application.Resources>

</Application>
 