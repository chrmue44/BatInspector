//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using BatInspector;
using BatInspector.Controls;
using libParser;
using System;
using System.Collections.Generic;
using System.IO;
using System.Security.Cryptography.X509Certificates;
using System.Security.RightsManagement;
using System.Xml.Serialization;


[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public class ModelParItem
{
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Name { get; set; }
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public enDataType Type { get; set; }
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Value { get; set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public int Decimals { get; set; }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public class ModelParams
{
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Name { get; set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string DataSet { get; set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public enModel Type { get;set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public bool Enabled { get; set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string SubDir { get;set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Script { get; set; }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string[] AvailableDataSets{ get; set; } = new string[0];

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public ModelParItem[] Parameters { get; set; } = new ModelParItem[5];


  public ModelParams getCopy()
  {
    ModelParams retVal = new ModelParams();

    retVal.Name = Name;
    retVal.Script = Script;
    retVal.Enabled = Enabled;
    retVal.DataSet = DataSet;
    retVal.SubDir = SubDir;
    retVal.Type = Type;
    retVal.Parameters = new ModelParItem[Parameters.Length];
    for(int i = 0; i < Parameters.Length; i++)
    {
      retVal.Parameters[i] = new ModelParItem();
      retVal.Parameters[i].Name = Parameters[i].Name;
      retVal.Parameters[i].Value = Parameters[i].Value;
      retVal.Parameters[i].Type = Parameters[i].Type;
      retVal.Parameters[i].Decimals = Parameters[i].Decimals;
    }
    
    return retVal;
  }

  public string getPar(string name)
  {
    foreach(ModelParItem p in Parameters)
    {
      if(p.Name == name)
        return p.Value; 
    }
    DebugLog.log($"Model Parameter with name {name} not found", enLogType.ERROR);
    return "";
  }

  public static ModelParams GetModelParams(string name, ModelParams[] modelParams)
  {
    ModelParams retVal = null;
    foreach (ModelParams p in modelParams)
    {
      if (p.Name == name)
      {
        retVal = p;
        break;
      }
    }
    return retVal;
  }
}


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
[System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
public partial class BatExplorerProjectFile
{

  private string _name;

  private string _created;

  private string _notes;

  private string _autoProcess;

  private PrjRecord[] _records;

  private string _fileVersion;

  private string _prjType;
  
  public BatExplorerProjectFile()
  {
    _notes = "";
    _created = "";
    _autoProcess = "true";
    _prjType = "Bats";
  }

  public BatExplorerProjectFile(string name, int fileCount)
  {
    _name = name;
    _records = new PrjRecord[fileCount];
    for (int i = 0; i < _records.Length; i++)
      _records[i] = new PrjRecord();
    _notes = "";
    _created = "";
    _autoProcess = "true";
    _prjType = "Bats";
  }

  public BatExplorerProjectFile(string name, List<PrjRecord> records)
  {
    _name = name;
    _records = records.ToArray();
    _notes = "";
    _created = "";
    _autoProcess = "true";
    _prjType = "Bats";
  }

  /// <remarks/>
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Name { get { return _name;} set {_name = value;} }

  /// <remarks/>
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Created { get { return _created; }  set {_created = value;} }

  /// <remarks/>
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string Notes { get { return _notes; } set {_notes = value; }  }

  /// <remarks/>
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string AutoProcess { get {return _autoProcess;} set {_autoProcess = value;} }

  /// <remarks/>
  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public string ProjectType { get { return _prjType; } set { _prjType = value; } }


  /// <remarks/>
  [XmlIgnoreAttribute]
  //[System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  //[System.Xml.Serialization.XmlArrayItemAttribute("Record", typeof(BatExplorerProjectFileRecordsRecord), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
  public PrjRecord[] Records
  {
    get
    {
      return this._records;
    }
    set
    {
      this._records = value;
    }
  }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public ModelParams[] Models { get; set; } = new ModelParams[5];

  /// <remarks/>
  [System.Xml.Serialization.XmlAttributeAttribute()]
  public string FileVersion
  {
    get
    {
      return this._fileVersion;
    }
    set
    {
      this._fileVersion = value;
    }
  }

  [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  public MicRecord Microphone { get; set; }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public class MicRecord
{
  [System.Xml.Serialization.XmlAttributeAttribute()]
  string Id { get; set; }
  
  [System.Xml.Serialization.XmlAttributeAttribute()]
  string Type { get; set; }
  
  [System.Xml.Serialization.XmlAttributeAttribute()]
  string Comment { get; set; }

  /// <remarks/>
  [System.Xml.Serialization.XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
  [System.Xml.Serialization.XmlArrayItemAttribute("Points", typeof(FreqResponseRecord), Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
  public FreqResponseRecord[] FrequencyResponse { get; set; }

}

[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public class FreqResponseRecord
{
  [System.Xml.Serialization.XmlAttributeAttribute()]
  public double Frequency { get; set; }

  /// <remarks/>
  [System.Xml.Serialization.XmlAttributeAttribute()]
  public double Amplitude { get; set; }
}



/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public partial class PrjRecord : IComparable<PrjRecord>
{

  private string fileField;

  private string nameField;

  public PrjRecord()
  {
    fileField = "";
    Selected = false;
  }

  public PrjRecord(string name)
  {
    fileField = name;
    nameField = Path.GetFileNameWithoutExtension(name);
    Selected = false;
  }

  /// <remarks/>
  [System.Xml.Serialization.XmlAttributeAttribute()]
  public string File
  {
    get
    {
      return this.fileField;
    }
    set
    {
      this.fileField = value;
    }
  }
  
  /// <remarks/>
  [System.Xml.Serialization.XmlAttributeAttribute()]
  public string Name
  {
    get
    {
      return this.nameField;
    }
    set
    {
      this.nameField = value;
    }
  }
  

  [XmlIgnoreAttribute]
  public bool Selected { get; set; } = false;

  public int CompareTo(PrjRecord obj)
  { 
    return string.Compare(File, obj.File); 
  }
}
